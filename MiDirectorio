from Directorio import *

if __name__ == "__main__":
    print("Bienvenido a su Directorio :D")
    directorio = Directorio()
    archivo_leido = None  # Inicializar como None

    while True:
        opcion_inicio = input("¿Desea iniciar con el directorio en blanco o leer desde un archivo? (b/a): ").lower()
        if opcion_inicio in ("b", "a"):
            break
        else:
            print("Opción inválida. Introduce 'b' para iniciar en blanco o 'a' para leer desde un archivo.")

    if opcion_inicio == "a":
        while True:
            archivo_csv = input("Introduce el nombre del archivo CSV a leer: ")
            try:
                directorio.leer_archivo(archivo_csv)
                print(f"Contactos leídos desde el archivo: {archivo_csv}")
                archivo_leido = archivo_csv  # Actualizar archivo_leido
                break
            except FileNotFoundError:
                print(f"Error: No se encontró el archivo {archivo_csv}. Intenta de nuevo.")

    try:
        while True:
            print("\nMenú del Directorio")
            print("1. Actualizar contacto.")
            print("2. Agregar contacto.")
            print("3. Buscar contacto por nombre completo.")
            print("4. Buscar contactor por nombre completo y tipo.")
            print("5. Buscar contacto por numero celular.")
            print("6. Buscar contacto por numero de cuenta, de profesor o de coordinador.")
            print("7. Eliminar contacto por nombre completo.")
            print("8. Eliminar contacto por numero celular.")
            print("9. Eliminar contacto por numero de cuenta, de profesor o de coordinador.")
            print("10. Leer contactos desde archivo CSV.")
            print("11. Listar todos los contactos.")
            print("12. Listar todos los contactos con correo electrónico.")
            print("13. Listar todos los contactos por carrera.")
            print("14. Listar contactos por salario.")
            print("15. Listar contactos por tipo.")
            print("16. Guardar contactos en archivo CSV.")
            print("17. Vaciar el directorio.")
            print("18. Salir.")


            opcion = input("Elige una opción: ")

            if opcion == "1":

                # Verificar si hay contactos en el directorio
                if directorio.contactos.esta_vacia():  # Usar esta_vacia() de la lista ligada
                    print("No hay contactos en el directorio. Agrega contactos primero.")
                    continue  # Volver al menú principal

                nombre = input("Nombre(s) del contacto a actualizar: ")
                apellidos = input("Apellidos del contacto a actualizar: ")

                contacto = directorio.buscar_contacto(nombre, apellidos)
                if not contacto:
                    print("Contacto no encontrado.")
                    continue

                tipo = input("Nuevo tipo de contacto (Alumno/Profesor/Coordinador): ")
                nuevo_nombre = input("Nuevo(s) nombre(s): ")
                nuevos_apellidos = input("Nuevos apellidos: ")
                nuevo_nacimiento = datetime.strptime(input("Nueva fecha de nacimiento (dd/mm/yyyy): "), "%d/%m/%Y").date()
                nuevo_email = input("Nuevo email: ")
                nuevo_celular = int(input("Nuevo celular: "))
                nueva_carrera = input("Nueva carrera: ")

                if tipo == "Alumno":
                    nuevo_num_cuenta = int(input("Nuevo número de cuenta: "))
                    nuevo_semestre = int(input("Nuevo semestre: "))
                    nuevas_materias = input("Nuevas materias: ")
                    nuevo_contacto = Alumno(nuevo_nombre, nuevos_apellidos, nuevo_nacimiento, nuevo_email, nuevo_celular,
                                            nueva_carrera, nuevo_num_cuenta, nuevo_semestre, nuevas_materias)
                elif tipo == "Profesor":
                    nuevo_num_profesor = int(input("Nuevo número de profesor: "))
                    nuevo_departamento = input("Nuevo departamento: ")
                    nuevo_salario = float(input("Nuevo salario: "))
                    nuevo_oficina = int(input("Nuevo télefono de oficina: "))
                    nuevos_grupos = input("Nuevos grupos: ")
                    nuevo_contacto = Profesor(nuevo_nombre, nuevos_apellidos, nuevo_nacimiento, nuevo_email, nuevo_celular,
                                              nueva_carrera, nuevo_num_profesor, nuevo_departamento, nuevo_salario,
                                              nuevo_oficina, nuevos_grupos)
                elif tipo == "Coordinador":
                    nuevo_num_coordinador = int(input("Nuevo número de coordinador: "))
                    nuevo_departamento = input("Nuevo departamento: ")
                    nueva_extension = int(input("Nueva extensión: "))
                    nuevo_salario = float(input("Nuevo salario: "))
                    nuevo_contacto = Coordinador(nuevo_nombre, nuevos_apellidos, nuevo_nacimiento, nuevo_email,
                                                 nuevo_celular, nueva_carrera, nuevo_num_coordinador, nuevo_departamento,
                                                 nueva_extension, nuevo_salario)
                else:
                    print("Tipo de contacto no válido.")
                    continue

                if directorio.actualizar_contacto(nombre, apellidos, nuevo_contacto):
                    print("Contacto actualizado exitosamente.")
                else:
                    print("Contacto no encontrado.")


            elif opcion == "2":

                #Validación de tipo de contacto.
                intentos = 0  # Inicializar el contador de intentos
                while True:
                    tipo = input("Tipo de contacto (Alumno/Profesor/Coordinador): ").capitalize()
                    if tipo in ("Alumno", "Profesor", "Coordinador"):
                        break  # Salir del bucle si el tipo es válido
                    else:
                        print("Tipo de contacto inválido. Inténtalo de nuevo.")
                        intentos += 1
                        if intentos == 3:
                            while True:
                                opcion = input("¿Deseas continuar intentando (s/n)? ")
                                if opcion.lower() == 's':
                                    intentos = 0  # Reiniciar el contador si el usuario continúa
                                    break  # Salir del bucle interno
                                elif opcion.lower() == 'n':
                                    break  # Salir del bucle principal (volver al menú)
                                else:
                                    print("Opción inválida. Inténtalo de nuevo.")
                            if opcion.lower() == 'n':
                                break  # Salir del bucle principal (volver al menú)

                # El usuario debe introducir el nombre(s) del contacto a añadir
                intentos = 0  # Inicializar el contador de intentos
                while True:
                    nombre = input("Nombre(s): ")
                    if nombre.replace(" ", "").isalpha():  # Verificar si solo contiene letras y espacios
                        break  # Salir del bucle si es válido
                    else:
                        print("Nombre inválido. Solo se permiten letras y espacios.")
                        intentos += 1
                        if intentos == 3:
                            while True:
                                opcion = input("¿Deseas continuar intentando (s/n)? ")
                                if opcion.lower() == 's':
                                    intentos = 0  # Reiniciar el contador si el usuario continúa
                                    break  # Salir del bucle interno
                                elif opcion.lower() == 'n':
                                    break  # Salir del bucle principal (volver al menú)
                                else:
                                    print("Opción inválida. Inténtalo de nuevo.")
                            if opcion.lower() == 'n':
                                break  # Salir del bucle principal (volver al menú)

                #El usuario debe introducir los apellidos del contacto a añadir
                intentos = 0  # Inicializar el contador de intentos
                while True:
                    apellidos = input("Apellidos: ")
                    if apellidos.replace(" ", "").isalpha():  # Verificar si solo contiene letras y espacios
                        break  # Salir del bucle si es válido
                    else:
                        print("Apellidos inválidos. Solo se permiten letras y espacios.")
                        intentos += 1
                        if intentos == 3:
                            while True:
                                opcion = input("¿Deseas continuar intentando (s/n)? ")
                                if opcion.lower() == 's':
                                    intentos = 0  # Reiniciar el contador si el usuario continúa
                                    break  # Salir del bucle interno
                                elif opcion.lower() == 'n':
                                    break  # Salir del bucle principal (volver al menú)
                                else:
                                    print("Opción inválida. Inténtalo de nuevo.")
                            if opcion.lower() == 'n':
                                break  # Salir del bucle principal (volver al menú)

                while True:
                    try:
                        nacimiento_str = input("Fecha de nacimiento (dd/mm/yyyy): ")
                        nacimiento = datetime.strptime(nacimiento_str, "%d/%m/%Y").date()
                        break  # Salir del bucle si la conversión es exitosa
                    except ValueError:
                        print("Formato de fecha incorrecto. Inténtalo de nuevo (dd/mm/yyyy).")

                # El usuario debe introducir el correo electrónico del contacto a añadir
                intentos = 0  # Inicializar el contador de intentos
                while True:
                    email = input("Email: ")
                    if validate_email(email):  # Usar validate_email para verificar el formato
                        break  # Salir del bucle si el formato es válido
                    else:
                        print("Formato de correo inválido. Inténtalo de nuevo.")
                        intentos += 1
                        if intentos == 3:
                            while True:
                                opcion = input("¿Deseas continuar intentando (s/n)? ")
                                if opcion.lower() == 's':
                                    intentos = 0  # Reiniciar el contador si el usuario continúa
                                    break  # Salir del bucle interno
                                elif opcion.lower() == 'n':
                                    break  # Salir del bucle principal (volver al menú)
                                else:
                                    print("Opción inválida. Inténtalo de nuevo.")
                            if opcion.lower() == 'n':
                                break  # Salir del bucle principal (volver al menú)

                # El usuario debe introducir el celular del contacto a añadir
                intentos = 0  # Inicializar el contador de intentos
                while True:
                    try:
                        celular = int(input("Celular: "))
                        break
                    except TypeError:
                        print("Celular debe ser un número. Inténtalo de nuevo.")
                    except ValueError:
                        print("Celular debe ser un número entero. Inténtalo de nuevo.")
                        intentos += 1
                        if intentos == 3:
                            while True:
                                opcion = input("¿Deseas continuar intentando (s/n)? ")
                                intentos += 1
                                if intentos == 3:
                                    while True:
                                        opcion = input("¿Deseas continuar intentando (s/n)? ")
                                        if opcion.lower() == 's':
                                            intentos = 0  # Reiniciar contador si continúa
                                            break  # Salir del bucle interno
                                        elif opcion.lower() == 'n':
                                            break  # Salir del bucle principal (volver al menú)
                                        else:
                                            print("Opción inválida. Inténtalo de nuevo.")
                                    if opcion.lower() == 'n':
                                        break  # Salir del bucle principal (volver al menú)

                # El usuario debe introducir la carrera del contacto a añadir
                intentos = 0  # Inicializar el contador de intentos
                while True:
                    carrera = input("Carrera: ")
                    if carrera.replace(" ", "").isalpha():  # Verificar si solo contiene letras y espacios
                        break  # Salir del bucle si es válido
                    else:
                        print("Carrera inválida. Solo se permiten letras y espacios.")
                        intentos += 1
                        if intentos == 3:
                            while True:
                                opcion = input("¿Deseas continuar intentando (s/n)? ")
                                if opcion.lower() == 's':
                                    intentos = 0  # Reiniciar el contador si el usuario continúa
                                    break  # Salir del bucle interno
                                elif opcion.lower() == 'n':
                                    break  # Salir del bucle principal (volver al menú)
                                else:
                                    print("Opción inválida. Inténtalo de nuevo.")
                            if opcion.lower() == 'n':
                                break  # Salir del bucle principal (volver al menú)

                if tipo == "Alumno":
                    # El usuario debe introducir el número de cuenta del contacto a añadir
                    intentos = 0  # Inicializar contador de intentos para num_cuenta
                    num_cuenta = None

                    while True:  # Bucle para validar la entrada del número de cuenta
                        try:
                            num_cuenta = int(input("Número de cuenta: "))
                            break  # Salir del bucle si la entrada es un entero válido
                        except ValueError:
                            print("Entrada inválida. Debes introducir un número entero para el número de cuenta.")
                            intentos += 1
                            if intentos == 3:
                                while True:
                                    opcion = input("¿Deseas continuar intentando (s/n)? ")
                                    if opcion.lower() == 's':
                                        intentos = 0  # Reiniciar contador si continúa
                                        break  # Salir del bucle interno
                                    elif opcion.lower() == 'n':
                                        break  # Salir del bucle principal (volver al menú)
                                    else:
                                        print("Opción inválida. Inténtalo de nuevo.")
                                if opcion.lower() == 'n':
                                    break  # Salir del bucle principal (volver al menú)

                    # El usuario debe introducir el semestre inscrito del contacto a añadir
                    intentos = 0  # Inicializar el contador de intentos
                    semestre = None
                    while True:  # Bucle para validar la entrada del semestre
                        try:
                            semestre = int(input("Semestre: "))
                            break  # Salir del bucle si la entrada es un entero válido
                        except ValueError:
                            print("Entrada inválida. Debes introducir un número entero para el semestre.")
                            intentos += 1
                            if intentos == 3:
                                while True:
                                    opcion = input("¿Deseas continuar intentando (s/n)? ")
                                    if opcion.lower() == 's':
                                        intentos = 0  # Reiniciar contador si continúa
                                        break  # Salir del bucle interno
                                    elif opcion.lower() == 'n':
                                        break  # Salir del bucle principal (volver al menú)
                                    else:
                                        print("Opción inválida. Inténtalo de nuevo.")
                                if opcion.lower() == 'n':
                                    break  # Salir del bucle principal (volver al menú)

                    # El usuario debe introducir las materias inscritas del contacto a añadir
                    intentos = 0  # Inicializar el contador de intentos
                    while True:
                        materias = input("Materias: ")
                        if carrera.replace(" ", "").isalpha():  # Verificar si solo contiene letras y espacios
                            break  # Salir del bucle si es válido
                        else:
                            print("Materias inválidas. Solo se permiten letras y espacios.")
                            intentos += 1
                            if intentos == 3:
                                while True:
                                    opcion = input("¿Deseas continuar intentando (s/n)? ")
                                    if opcion.lower() == 's':
                                        intentos = 0  # Reiniciar el contador si el usuario continúa
                                        break  # Salir del bucle interno
                                    elif opcion.lower() == 'n':
                                        break  # Salir del bucle principal (volver al menú)
                                    else:
                                        print("Opción inválida. Inténtalo de nuevo.")
                                if opcion.lower() == 'n':
                                    break  # Salir del bucle principal (volver al menú)

                                # Verificar si num_cuenta y semestre están definidos antes de crear el objeto Alumno
                                if num_cuenta is not None and semestre is not None:
                                    contacto = Alumno(nombre, apellidos, nacimiento, email, celular, carrera, num_cuenta, semestre,
                                                      materias)
                                else:
                                    # Manejar el caso donde num_cuenta o semestre no están definidos (usuario eligió 'n')
                                    print("No se pudo agregar el contacto. Regresando al menú principal.")
                                    continue  # Volver al menú principal


                elif tipo == "Profesor":
                    num_profesor = int(input("Número de profesor: "))
                    departamento = input("Departamento: ")
                    salario = float(input("Salario: "))
                    oficina = int(input("Télefono de oficina: "))
                    grupos = int(input("Grupos: "))

                    contacto = Profesor(nombre, apellidos, nacimiento, email, celular, carrera,
                                        num_profesor, departamento, salario, oficina, grupos)



                elif tipo == "Coordinador":
                    num_coordinador = int(input("Número de coordinador: "))
                    departamento = input("Departamento: ")
                    extension = int(input("Extensión: "))
                    salario = float(input("Salario: "))
                    contacto = Coordinador(nombre, apellidos, nacimiento, email, celular, carrera, num_coordinador,
                                           departamento, extension, salario)

                else:
                    print("Tipo de contacto no válido.")
                    continue

            elif opcion == "3":

                # Verificar si hay contactos en el directorio
                if directorio.contactos.esta_vacia():  # Usar esta_vacia() de la lista ligada
                    print("No hay contactos en el directorio. Agrega contactos primero.")
                    continue  # Volver al menú principal

                nombre = input("Nombre(s) del contacto a buscar: ")
                apellidos = input("Apellidos del contacto a buscar: ")  # This line is needed now
                contacto = directorio.buscar_contacto(nombre, apellidos)
                if contacto:
                    print("Contacto encontrado: ", contacto)
                else:
                    print("Contacto no encontrado.")


            elif opcion == "4":

                # Verificar si hay contactos en el directorio
                if directorio.contactos.esta_vacia():  # Usar esta_vacia() de la lista ligada
                    print("No hay contactos en el directorio. Agrega contactos primero.")
                    continue  # Volver al menú principal

                nombre = input("Nombre(s) del contacto a buscar: ")
                apellidos = input("Apellidos del contacto a buscar: ")
                tipo = input("Tipo de contacto (Alumno/Profesor/Coordinador): ").capitalize()
                contacto = directorio.buscar_contacto_nombre_apellidos_tipo(nombre, apellidos, tipo)

                if contacto:
                    print(contacto)  # Imprime los datos del contacto si se encuentra
                else:
                    print("Contacto no encontrado.")  # Imprime un mensaje si no se encuentra


            elif opcion == "5":
                # Verificar si hay contactos en el directorio
                if directorio.contactos.esta_vacia():  # Usar esta_vacia() de la lista ligada
                    print("No hay contactos en el directorio. Agrega contactos primero.")
                    continue  # Volver al menú principal

                while True:
                    try:
                        celular = int(input("Introduce el número de celular a buscar: "))
                        break  # Salir del bucle si la entrada es un entero válido
                    except ValueError:
                        print("Entrada inválida. Debes introducir un número entero.")

                contacto = directorio.buscar_por_celular(celular)
                if contacto:
                    print("Contacto encontrado:", contacto)
                else:
                    print("Contacto no encontrado.")


            elif opcion == "6":

                # Verificar si hay contactos en el directorio
                if directorio.contactos.esta_vacia():  # Usar esta_vacia() de la lista ligada
                    print("No hay contactos en el directorio. Agrega contactos primero.")
                    continue  # Volver al menú principal

                tipo = input("Tipo de contacto (Alumno/Profesor/Coordinador): ")
                numero = None  # Inicializar numero a None

                while True:  # Bucle para validar la entrada del número
                    try:
                        if tipo == "Alumno":
                            tipo = Alumno
                            numero = int(input("Número de cuenta: "))
                        elif tipo == "Profesor":
                            tipo = Profesor
                            numero = int(input("Número de empleado: "))
                        elif tipo == "Coordinador":
                            tipo = Coordinador
                            numero = int(input("Número de coordinador: "))
                        else:
                            print("Tipo de contacto no válido.")
                            break  # Salir del bucle si el tipo es inválido
                        break  # Salir del bucle si la entrada es válida
                    except ValueError:
                        print("Entrada inválida. Debes introducir un número entero.")

                if numero is not None:  # Verificar si numero está definido
                    contacto = directorio.buscar_por_numero(tipo, numero)
                    if contacto:
                        print("Contacto encontrado:", contacto)
                    else:
                        print("Contacto no encontrado.")

            elif opcion == "7":

                # Verificar si hay contactos en el directorio
                if directorio.contactos.esta_vacia():  # Usar esta_vacia() de la lista ligada
                    print("No hay contactos en el directorio. Agrega contactos primero.")
                    continue  # Volver al menú principal

                nombre = input("Nombre del contacto a eliminar: ")
                apellidos = input("Apellidos del contacto a eliminar: ")
                if directorio.eliminar_contacto(nombre, apellidos):
                    print("Contacto eliminado exitosamente.")
                else:
                    print("Contacto no encontrado.")

            elif opcion == "8":

                # Verificar si hay contactos en el directorio
                if directorio.contactos.esta_vacia():  # Usar esta_vacia() de la lista ligada
                    print("No hay contactos en el directorio. Agrega contactos primero.")
                    continue  # Volver al menú principal

                celular = int(input("Introduce el número de celular del contacto a eliminar: "))
                if directorio.eliminar_por_celular(celular):
                    print("Contacto eliminado exitosamente.")
                else:
                    print("Contacto no encontrado.")


            elif opcion == "9":

                # Verificar si hay contactos en el directorio
                if directorio.contactos.esta_vacia():  # Usar esta_vacia() de la lista ligada
                    print("No hay contactos en el directorio. Agrega contactos primero.")
                    continue  # Volver al menú principal

                tipo = input("Tipo de contacto (Alumno/Profesor/Coordinador): ")
                if tipo == "Alumno":
                    tipo = Alumno
                    numero = int(input("Número de cuenta: "))
                elif tipo == "Profesor":
                    tipo = Profesor
                    numero = int(input("Número de profesor: "))
                elif tipo == "Coordinador":
                    tipo = Coordinador
                    numero = int(input("Número de coordinador: "))
                else:
                    print("Tipo de contacto no válido.")
                    continue

                if directorio.eliminar_por_numero(tipo, numero):
                    print("Contacto eliminado exitosamente.")
                else:
                    print("Contacto no encontrado.")

            elif opcion == "10":
                archivo_csv = input("Nombre del archivo CSV a leer: ")
                directorio.leer_archivo(archivo_csv)
                print(archivo_csv)
                print("Contactos leídos desde el archivo CSV.")


            elif opcion == "11":

                # Verificar si hay contactos en el directorio
                if directorio.contactos.esta_vacia():  # Usar esta_vacia() de la lista ligada
                    print("No hay contactos en el directorio. Agrega contactos primero.")
                    continue  # Volver al menú principal

                contactos = directorio.listar_contactos()
                if contactos:
                    print("Contactos:")
                    for contacto in contactos:
                        print(contacto)
                else:
                    print("No hay contactos en el directorio.")


            elif opcion == "12":

                # Verificar si hay contactos en el directorio
                if directorio.contactos.esta_vacia():  # Usar esta_vacia() de la lista ligada
                    print("No hay contactos en el directorio. Agrega contactos primero.")
                    continue  # Volver al menú principal

                directorio.listar_contactos_email()


            elif opcion == "13":

                # Verificar si hay contactos en el directorio
                if directorio.contactos.esta_vacia():  # Usar esta_vacia() de la lista ligada
                    print("No hay contactos en el directorio. Agrega contactos primero.")
                    continue  # Volver al menú principal

                carrera = input("Introduce la carrera a buscar: ")
                directorio.listar_contactos_por_carrera(carrera)

            elif opcion == "14":

                # Verificar si hay contactos en el directorio
                if directorio.contactos.esta_vacia():  # Usar esta_vacia() de la lista ligada
                    print("No hay contactos en el directorio. Agrega contactos primero.")
                    continue  # Volver al menú principal

                salario = float(input("Introduce el salario a buscar: "))
                profesores = []
                coordinadores = []

                for contacto in directorio.contactos.datos:

                    if isinstance(contacto, Profesor) and contacto.salario == salario:
                        profesores.append(contacto)

                    elif isinstance(contacto, Coordinador) and contacto.salario == salario:
                        coordinadores.append(contacto)

                if profesores:
                    print("Profesores con ese salario:")
                    for profesor in profesores:
                        print(profesor)

                if coordinadores:
                    print("Coordinadores con ese salario:")
                    for coordinador in coordinadores:
                        print(coordinador)

                if not profesores and not coordinadores:
                    print("No se encontraron contactos con ese salario.")

            elif opcion == "15":

                # Verificar si hay contactos en el directorio
                if directorio.contactos.esta_vacia():  # Usar esta_vacia() de la lista ligada
                    print("No hay contactos en el directorio. Agrega contactos primero.")
                    continue  # Volver al menú principal

                tipo = input("Tipo de contacto a listar (Alumno/Profesor/Coordinador): ")
                if tipo == "Alumno":
                    contactos = directorio.listar_por_tipo(Alumno)
                elif tipo == "Profesor":
                    contactos = directorio.listar_por_tipo(Profesor)
                elif tipo == "Coordinador":
                    contactos = directorio.listar_por_tipo(Coordinador)
                else:
                    print("Tipo de contacto no válido.")
                    continue

                if contactos:
                    print(f"Contactos de tipo {tipo}:")
                    for contacto in contactos:
                        print(contacto)

                else:
                    print(f"No hay contactos de tipo {tipo} en el directorio.")

            elif opcion == "16":

                # Verificar si hay contactos en el directorio
                if directorio.contactos.esta_vacia():  # Usar esta_vacia() de la lista ligada
                    print("No hay contactos en el directorio. Agrega contactos primero.")
                    continue  # Volver al menú principal

                archivo_csv = input("Nombre del archivo CSV a guardar: ")
                directorio.guardar_archivo(archivo_csv)
                print("Contactos guardados en el archivo CSV.")

            elif opcion == "17":
                directorio.vaciar_directorio()

            elif opcion == "18":
                print("Saliendo del programa. ¡Hasta luego! :D.")
                break

            else:
                print("Opción no válida. Intenta de nuevo.")


            while True:
                volver_al_menu = input("¿Desea volver al menú principal? (s/n): ")
                if volver_al_menu.lower() in ('s', 'n'):
                    break
                else:
                    print("Por favor, introduce 's' o 'n'")

            if volver_al_menu.lower() == 'n':
                print("Saliendo del programa. ¡Hasta luego! :D")
                exit()

    finally:
        if archivo_leido is None:
            archivo_guardar = input("Introduce el nombre del archivo para guardar los datos: ")
            directorio.guardar_archivo(archivo_guardar)
        else:
            directorio.guardar_archivo(archivo_leido)
        print("Cambios guardados.")
